#!/bin/bash
set -euf -o pipefail

FILE=${FILE:-"$(date +%F).tidal"}
TEMPO_HOST=${TEMPO_HOST:-"127.0.0.1"}
SESSION=${SESSION:-"tidal"}
GHCI=${GHCI:-"ghcii.sh"}
TMUX=${TMUX:-"tmux"}

# Get current directory (of script)
# http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  # if $SOURCE was a relative symlink, we need to resolve it relative to the
  # path where the symlink file was located
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

BOOT_PATH=${BOOT_PATH:-"$DIR/../BootTidal.hss"}


#Setup a file that automatically starts superdirt and includes settings
# SUPERCOLLIDER_FILE=${SUPERCOLLIDER_FILE:-"$DIR/../settings.scd"}


# Check if tmux session "tidal" is running, attach only
# else, create new session, split windows and run processes
$TMUX attach-session -t $SESSION || $TMUX \
  new-session -s $SESSION   \; \
  split-window -h -p 15 -t $SESSION   \; \
  send-keys -t 0 "vim $FILE -R" C-m   \; \
  send-keys -t 1 "TIDAL_TEMPO_IP=$TEMPO_HOST $GHCI -XOverloadedStrings" C-m   \; \
  load-buffer $BOOT_PATH   \; \
  paste-buffer -d -t 1  \; \
  selectp -t 0 \; \
 
# send-keys ":SClangStart" C-m   \; \
# selectp -t 0 \; \
# send-keys ":call SClang_block()" C-m\; \
# send-keys ":tabnew $SUPERCOLLIDER_FILE" C-m   \; \
